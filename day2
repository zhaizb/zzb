For(元素类型 变量名 ：集合/数组的名称){
	循环体；
}

执行流程（推荐使用）
不断的从集合/数组中取出一个元素赋值给变量后执行循环体，直至处理完所有元素为止（迭代器的简化版）

对于set集合来说遍历所有元素的方式有toString(),迭代器，for each.
对于List集合来说遍历所有元素的方式有除了上述三种方式外还有get()方法。

每个节点最多只有两个子节点的树形结构就是二叉树
只有子节点的节点为根节点，只有父节点的节点为叶子节点，既有子节点又有父节点的节点是枝节点
高度即为层数，大小为节点个数
在左为左子节点，反之为右子节点
由左子节点为根节点的二叉树为左子树
由右子节点为根节点的二叉树为右子树

有序二叉树条件
左子树中任意节点都小于根节点
右子树中任意节点都大于根节点
左子树与右子树的内部也遵循此要求

元素放入TreeSet集合原理：由于treeSet集合的底层是采用有序二叉树实现的，当插入新元素到TreeSet集合时需要比较新元素与已有元素的大小来确定新元素的位置，从而保证二叉树依然有序，而比较方式有两种
1 使用元素的自然排序规则比较，也就是让元素实现java.lang.Comparable接口；
2 使用比较器规则比较，也就是创建TreeSet集合时传入java.util.Comparator接口；

使用TreeSet集合时默认采用自然排序规则处理，但自然排序只能按照一种规则排序，若希望多元化排序，则借助比较器处理

Java.util.Map<K,V>接口中存放元素的基本单位是：单对元素
  K ---用于描述键（Key）的类型
  V ---用于描述值（Value）的类型
该接口的主要实现类 HashMap类和TreeMap类
给接口中键不允许重复，而且每个键只能对应一个值

常用方法
V put(K key, V value)   -- 用于将key和value组成一对放入当前集合中
若实现增加功能则返回null，若实现修改功能则返回原来的value
